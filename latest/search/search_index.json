{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Semi-Lagrangian method Let us consider an abstract scalar advection equation of the form $\\frac{\u2202f}{\u2202t}+ a(x, t) \u22c5 \u2207f = 0.$ The characteristic curves associated to this equation are the solutions of the ordinary differential equations $\\frac{dX}{dt} = a(X(t), t)$ We shall denote by $X(t, x, s)$ the unique solution of this equation associated to the initial condition $X(s) = x$. The classical semi-Lagrangian method is based on a backtracking of characteristics. Two steps are needed to update the distribution function $f^{n+1}$ at $t^{n+1}$ from its value $f^n$ at time $t^n$ : For each grid point $x_i$ compute $X(t^n; x_i, t^{n+1})$ the value of the characteristic at $t^n$ which takes the value $x_i$ at $t^{n+1}$. As the distribution solution of first equation verifies $f^{n+1}(x_i) = f^n(X(t^n; x_i, t^{n+1})),$ we obtain the desired value of $f^{n+1}(x_i)$ by computing $f^n(X(t^n;x_i,t^{n+1})$ by interpolation as $X(t^n; x_i, t^{n+1})$ is in general not a grid point. Eric Sonnendr\u00fccker - Numerical methods for the Vlasov equations Vlasov Equation - Wikipedia Splittings.jl Documentation Semi-Lagrangian method Splittings.jl Documentation Functions Index Functions # Splittings.compute_rho Method . Compute charge density \u03c1(x,t) = \u222b f(x,v,t) dv source # Splittings.compute_e Method . Compute Ex using that -ik*Ex = rho source Index Splittings.compute_e Splittings.compute_rho","title":"Home"},{"location":"#semi-lagrangian-method","text":"Let us consider an abstract scalar advection equation of the form $\\frac{\u2202f}{\u2202t}+ a(x, t) \u22c5 \u2207f = 0.$ The characteristic curves associated to this equation are the solutions of the ordinary differential equations $\\frac{dX}{dt} = a(X(t), t)$ We shall denote by $X(t, x, s)$ the unique solution of this equation associated to the initial condition $X(s) = x$. The classical semi-Lagrangian method is based on a backtracking of characteristics. Two steps are needed to update the distribution function $f^{n+1}$ at $t^{n+1}$ from its value $f^n$ at time $t^n$ : For each grid point $x_i$ compute $X(t^n; x_i, t^{n+1})$ the value of the characteristic at $t^n$ which takes the value $x_i$ at $t^{n+1}$. As the distribution solution of first equation verifies $f^{n+1}(x_i) = f^n(X(t^n; x_i, t^{n+1})),$ we obtain the desired value of $f^{n+1}(x_i)$ by computing $f^n(X(t^n;x_i,t^{n+1})$ by interpolation as $X(t^n; x_i, t^{n+1})$ is in general not a grid point. Eric Sonnendr\u00fccker - Numerical methods for the Vlasov equations Vlasov Equation - Wikipedia","title":"Semi-Lagrangian method"},{"location":"#splittingsjl-documentation","text":"Semi-Lagrangian method Splittings.jl Documentation Functions Index","title":"Splittings.jl Documentation"},{"location":"#functions","text":"# Splittings.compute_rho Method . Compute charge density \u03c1(x,t) = \u222b f(x,v,t) dv source # Splittings.compute_e Method . Compute Ex using that -ik*Ex = rho source","title":"Functions"},{"location":"#index","text":"Splittings.compute_e Splittings.compute_rho","title":"Index"}]}